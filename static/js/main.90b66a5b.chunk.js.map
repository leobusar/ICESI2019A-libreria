{"version":3,"sources":["config/Firebase.js","components/Libro/LibroItem.js","components/Libro/LibroList.js","components/Libro/LibroForm.js","components/Libro/Libros.js","components/NavBar.js","components/Home.js","components/About.js","components/Libro/Libro.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","LibroItem","this","props","handleEdit","libro","react_default","a","createElement","scope","id","name","author","className","onClick","clickLibro","bind","Component","LibroList","handleEditarLibro","_this","libroList","libros","map","libroTmp","Libro_LibroItem","key","handleEditLibro","LibroForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","setState","libroEdit","e","preventDefault","console","log","handleNuevoLibro","event","defineProperty","target","value","onSubmit","handleSubmit","type","onChange","handleOnChange","htmlFor","Libros","db","firestore","_this2","collection","get","then","querySnapshot","forEach","doc","data","index","findIndex","libroItem","Math","floor","random","push","owner","Libro_LibroList","editarLibro","Libro_LibroForm","agregarLibro","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Link","to","Home","About","Libro","match","params","App","BrowserRouter","components_NavBar","Route","exact","path","component","render","Libro_Libros","assign","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90b66a5b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nvar config = {\n    apiKey: \"AIzaSyDK-znSL__6nFbWzNSIGTwtdk58pnQJriY\",\n    authDomain: \"libreria-b3987.firebaseapp.com\",\n    databaseURL: \"https://libreria-b3987.firebaseio.com\",\n    projectId: \"libreria-b3987\",\n    storageBucket: \"libreria-b3987.appspot.com\",\n    messagingSenderId: \"710050059759\"\n  };\n  firebase.initializeApp(config);\n\nexport default firebase;","import React, { Component } from 'react';\n\nclass LibroItem extends Component {\n\n\n  clickLibro(){\n    this.props.handleEdit(this.props.libro);\n  }\n\n  render() {\n    var  libro=this.props.libro;\n\n    return (\n      <tr>\n        <th scope=\"row\">{libro.id}</th>\n        <td>{libro.name}</td>\n        <td>{libro.author}</td>\n        <td>\n        <button className=\"btn  btn-success\" onClick={this.clickLibro.bind(this)}>Editar</button>\n        <button className=\"btn  btn-danger\" >Eliminar</button>\n        </td>\n      </tr>       \n    );\n  }\n}\n\nexport default LibroItem;\n","import React, { Component } from 'react';\nimport LibroItem from './LibroItem';\n\nclass LibroList extends Component {\n\n  handleEditLibro(libro){\n    this.props.handleEditarLibro(libro);\n    //console.log(libro)\n  }\n\n  render() {\n    //console.log(this.props.libros);\n\n    let  libroList = this.props.libros.map( (libroTmp)=>\n        (<LibroItem key={libroTmp.id} libro={libroTmp} handleEdit={this.handleEditLibro.bind(this)} />)\n    );\n\n    return (\n      <div className=\"LibroList\">\n        <table className=\"table\">\n            <thead>\n                <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Nombre</th>\n                <th scope=\"col\">Autor</th>\n                <th scope=\"col\">Acciones</th>\n                </tr>\n            </thead>\n            <tbody>\n                {libroList}\n            </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default LibroList;\n","import React, { Component } from 'react';\n\nclass LibroForm extends Component {\n\n  constructor (){\n    super();\n    this.state = {\n         id: '',  name: '', author: ''\n    };\n    \n  }\n\n  componentWillReceiveProps(props){\n    this.setState({\n      id: props.libroEdit.id,\n      name: props.libroEdit.name,\n      author: props.libroEdit.author      \n    });\n  }\n\n  handleSubmit(e){\n      e.preventDefault();\n      console.log(this.state);\n      // let nuevoLibro =  {\n      //     name: this.refs.name.value,\n      //     author: this.refs.author.value\n      // };\n      let libro = {\n        id: this.state.id,\n        name: this.state.name,\n        author: this.state.author\n      }\n\n      this.props.handleNuevoLibro(libro);\n\n  }\n\n  handleOnChange (event){\n   // console.log(event.target.value);\n\n    this.setState({\n        [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"LibroForm\">\n        <form onSubmit={this.handleSubmit.bind(this)}>\n            <input type=\"hidden\" value={this.state.id} onChange={this.handleOnChange.bind(this)} />\n            <div className=\"form-group\">\n                <label htmlFor=\"name\">Nombre</label>\n                <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={this.state.name} onChange={this.handleOnChange.bind(this)} />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"author\">Autor</label>\n                <input type=\"text\" className=\"form-control\" id=\"author\" name=\"author\" value={this.state.author} onChange={this.handleOnChange.bind(this)} />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Crear</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LibroForm;\n","import React, { Component } from 'react';\nimport firebase from '../../config/Firebase';\n\nimport LibroList from  './LibroList';\nimport LibroForm from './LibroForm';\n\nclass Libros extends Component {\n\n  constructor(){\n      super();\n\n      this.state ={\n            libros: [\n                { id: 1,  name: \"Hojarasca\", author: \"Gabriel GM\" },\n                { id: 2,  name: \"Cien  años de soledad\", author: \"Gabriel GM\" },\n                { id: 3,  name: \"platero y yo\", author: \"Juan Ramón Jimenez\" },\n                { id: 4,  name: \"Romeo y julieta\", author: \"William Shakespeare\" }\n            ],\n            libroEdit: { id: \"\",  name: \"\", author: \"\"},\n            db: firebase.firestore()\n      };\n\n  }\n\n\n  componentDidMount(){\n    this.state.db.collection(\"libros\").get().then((querySnapshot)=>\n        querySnapshot.forEach(doc =>{\n          console.log(doc.data());\n          this.setState( {libros: doc.data()});\n        })\n    );\n  }\n\n  agregarLibro(libro){\n\n      let  libros = this.state.libros;\n\n      if(libro.id!==\"\"){\n        let index = libros.findIndex( (libroItem) => {return libroItem.id===libro.id });\n        libros[index] = libro;\n      }\n      else{\n        let  id  = Math.floor(Math.random()*100000)+1;\n        libro.id = id;\n        libros.push(libro);\n      }\n      this.setState({\n        libros: libros,\n        libroEdit: { id: \"\",  name: \"\", author: \"\"}\n      });\n      //console.log(libros);\n\n  }\n\n  editarLibro(libro){\n    console.log(libro);\n    this.setState({\n       libroEdit: libro\n     });\n  }\n\n\n  render() {\n    return (\n\n      <div className=\"Libros container mt-5\">\n         <h1> Librería de {this.props.owner}</h1>\n         <LibroList  libros={this.state.libros} handleEditarLibro={this.editarLibro.bind(this)}/>\n         <LibroForm handleNuevoLibro={this.agregarLibro.bind(this)}  libroEdit={this.state.libroEdit} />\n      </div>\n    );\n  }\n}\n\nexport default Libros;\n","import React, { Component } from 'react';\nimport {Link} from  'react-router-dom';\n\nclass NavBar extends Component {\n  render() {\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <span className=\"navbar-brand\">Navbar</span>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\n            </li> \n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/libros\">Libros</Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\n            </li>\n            </ul>\n        </div>\n        </nav>\n    );\n  }\n}\n\nexport default NavBar;","import React, { Component } from 'react';\n\n\nclass Home extends Component {\n  render() {\n\n    return (\n        <div className=\"Home\">\n            <h1 className=\"mx-3 mt-5\"> Bienvenidos</h1>\n        </div>\n\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n\n    return (\n        <div className=\"About\">\n            <h1 className=\"mx-3 mt-5\"> Leonardo  Bustamante</h1>\n        </div>\n\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nclass Libro extends Component {\n\n\n  render() {\n\n    console.log(this.props.match.params.id);\n    return (\n        <div>\n            {this.props.match.params.id}\n        </div>\n    );\n  }\n}\n\nexport default Libro;\n","import React, { Component } from 'react';\nimport Libros from './components/Libro/Libros';\nimport NavBar from './components/NavBar';\nimport {BrowserRouter as Router, Route } from  'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Libro from  './components/Libro/Libro'\n\nclass App extends Component {\n  render() {\n    var  owner=\"Leonardo\";\n\n    return (\n      <Router>\n        <div className=\"App\">\n            <NavBar />\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/libros\"  render={(props) => (\n                     <Libros {...props} owner={owner}/>\n                  )} />\n            <Route path=\"/about\" component={About}/>\n            <Route path=\"/libros/:id\" component={Libro}/>\n\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}